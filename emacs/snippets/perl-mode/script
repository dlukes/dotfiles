# -*- mode: snippet; require-final-newline: nil -*-
# key: script
# expand-env: ((yas-indent-line 'fixed))
# --
#!/usr/bin/env perl

# ${1:Script overview.}

use utf8::all;
use strict;
use warnings;
use autodie;
use FindBin;
use Log::Log4perl ':easy';
use Getopt::ArgParse;
use v5.14;

Log::Log4perl->easy_init(
  {
    layout => "[%d $FindBin::Script:%p] %m%n",
    level  => $DEBUG,
  }
);

sub parse_args {
  my $argv = \@_ || \@ARGV;

  my $ap = Getopt::ArgParse->new_parser(
    prog => $FindBin::Script,
    description => '${2:What this program does.}',
    epilog => '${3:This appears at the bottom of usage.}'
      );
  $ap->add_arg('--foo', '-f', required => 1);
  $ap->add_arg('--bool', '-b', type => 'Bool');
  $ap->add_arg('input', nargs => '*', help => 'input file(s) (or STDIN)');

  my $args = $ap->parse_args(@$argv);
  @ARGV = $args->input;
  return $args;
}

unless (caller) {
  my $args = parse_args();
}
